- does "scope" and "requirement" means missing headings? and what other keywords says so
- is the format consistent with each file?
- what are the meaning of the classification and should we consider them
- files with problems: IEC 61508-3-1
- when droping the md file, is it a single part or is it all of them

- what does standard atlas is all about in the grand theme of things
- do i need to modify the code or just add mine
- how to integrate the tree structure with the ability to generate headings


what should we do:
- scope and other is a missing title
- we should contanerize the app to run  of every computer (maybe use docker)
- add a seprate directory under tools for our project

##################################################################################################################

What we added from last time:
- parsed the files from the data directory of standart atlas and show the tree for each part
- added an option to drop the data file in adition to the markdown
- we can navigate through different parts of the tree
- right click on a node to redirect to the content

What should we do to finish:
V adjust the height according to the number of nodes.
V add headings to a specific node and not just for the whole document.
V upper letter titles means no title
m solve the refresh problem.
V redirecting to the same page and not creating a new one everytime.
V save the progress - nodes open state.
V separte files - add a css file.
- save progress - by downloading the md file after generating titles, keep the color green for the made up ones.
V make sure that the markdown file corresponds to the data file (and which part).
V if markdown file deopped -> remove the drop md area. if data file dropped -> remove only data drop area. make a button for dropping another file.
m add a counter when generating headings
V update the nodes color
- improve header generation.
- remove temp files after we are done.
* make the code and the links generic - don't use local directories.
* containerize the web aplication so that it would work on different devices (for example by using docker)
* finalize and optimize the code (remove redundancy and clean the code and test it)
* add the code to the standart atlas as a separate directory in tools

Things to consider:
- the parsing depends on the format of the data

##################################################################################################################

what should we add to the presentation
- the progress of the project - what we did and what we didn't
- the reesults of everything
- show a live demo
- add a user guide to how to use it


##################################################################################################################

Progress:

4) things to consider:
- if a file doesn't comply with the format it will cause an uncertain behaviour.
- we tried to add alerts for edge cases, but not all are covered - so you should restart when shit happens.

5) future plans and improvements:
- cover more edge cases.
- change the code according to the format.
- adding an ability to compare 2 (or more files) symantically and visualize that using this tool.

##################################################################################################################

presentation:
1) add a tree structure then zoom in on the nodes to show thier content.
2)


##################################################################################################################

Things to add:

- I actually didn't know javascript, we started by using a code for a simple tree and then expand on it.